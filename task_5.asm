.model small
.stack 100h
.186
.code

start:
MOV AX, @data
MOV DS, AX
MOV AX, 0B900h ;Используя регистр ES организовываю запись данных в видеопамять
MOV ES, AX ;по адресу В900h:0000h

MOV AH, 00h ;Запрос на установку видеорежима
MOV AL, 03h ;Стандартный цветовой режим
INT 10h ;Вызов обработчика прерывания 

MOV AH, 02h ;Перемещение курсора
MOV BH, 01h ;Страница 1
MOV DH, 5 ;Строка 5
MOV DL, 10 ;Столбец 10
INT 10h ;Вызов обработчика прерывания

MOV AH, 05h ;Выбор функции для вывода страница
MOV AL, 01h ;Страница 1
INT 10h ;Вызов обработчика прерывания

call B10DISPLAY ;Вызов подпрограммы, которая подготавливает область вывода
POPA
MOV AX, 4C00h ;Завершение программы 
INT 21h

B10DISPLAY proc ;Подпрограмма сохраняет символ и атрибут в области видеопамяти
	PUSHA ;PUSH регистров
	MOV AL, 4Dh ;Заносим первый символ M
	MOV AH, 09h ;Помещаем значение атрибута в регистр
	MOV DI, 820 ;Начальное смещение видеопамяти
	MOV CX, 0 ;Обнуляем регистр для цикла
	
	m0:
	PUSH CX ;CX сохраняем в стеке
	MOV CX, 7 ;Количество символов, которое надо вывести
	
	m1:
	MOV ES: WORD PTR[DI], AX ;Помещаем символ в строку со смещением 
	ADD DI, 2 ;Смещаемся на 2, так как у нас байты
	LOOP m1
	
	INC AL ;Переход на следующую букву
	INC AH ;Переход на следующий цвет
	ADD DI, 160
	SUB DI, 14 ;Для вывода символов
	POP CX
	INC CX ;Добавляем 1
	CMP CX, 6 ;Делаем, пока не равно 6
	JL m0
	ret
B10DISPLAY endp ;Конец подпрограммы
	
end start ;Конец программы
	
